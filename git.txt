username ：sunyingchuan
Email：1285424800@qq.com


git branch -t test    创建分支
git branch -d test   删除分支
git add wenjian.txt
git commit wenjian.txt
git log
git status
git checkout
git reset --hard HEAD^^
git reset HEAD
git push origin master
git pull origin master
git clone https://xx/xxxx/xxx

git remote add origin https://github.com/sunyingchuan/teaDemo.git
git push -u origin master
git push -u origin master


-----------------------------------------------------------------------------------------------------
git分支的重要作用
先说分支的作用：分支不是GIT的专利，早在CVS时代就有了。分支对于团队来说作用太大了。
比如说一个项目现在是1.0版，那么开发团队可能要同时进行1.1版和2.0版的开发，这样代码就会出现较大分歧。
这时候就需要用到分支了，不同的任务组在不同的分支上开发，互相之间不会影响。
再比如说，需要向项目中添加一个新功能，一般的团队都不会直接在主分支上修改，都会新建一个分支，在上面更改代码。
这样做的好处就是保证主线代码的完整性和可用性，也就是说，主线上都是稳定的代码，可以直接拿来发布的。

再说说分支在GIT上的特点：GIT的技术可以说是非常强大，说一切开发都依赖于分支一点都不过分。
一般项目的master分支都是稳定的代码，可以直接发布或者被项目之外的人使用。新特性和BUG修改都在不同的分支上进行开发和测试。
这样规范了整个软件的开发流程。分支之间的互不影响这种特性可以增加团队合作的效率。
GIT分支的另外一个重要特性就是可以合并不同软件仓库（fork）的分支。
大体就是：开发团队有一个主软件仓库，开发者可以fork这个仓库，相当于克隆了一个私有的软件仓库，然后开发者就可以在自己的软件仓库中建立分支并开发测试，
测试完毕之后，可以向主软件仓库提交merge request，这样新开发的特性就会被合并到主软件仓库的某个分支中。
这种特性极大地推动了开源项目，多年前参加开源项目都是神话，自从GIT出现后，每个人都可能成为开源项目的贡献者，就是基于这种特性（请参照Github的pull request，和merge request是同一个东西）。